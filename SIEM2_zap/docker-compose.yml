version: "3.8"
services:
  api:
    build: ./api
    env_file:
      - ./api/.env
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    depends_on:
      - jaeger
      - logstash

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports: ["9200:9200"]
    healthcheck: { test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null"], interval: 10s, retries: 30 }

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports: ["5601:5601"]
    depends_on: [elasticsearch]

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports: ["5044:5044/udp"]
    depends_on: [elasticsearch]

  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports: ["16686:16686", "6831:6831/udp"]

  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports: ["9090:9090"]

  grafana:
    image: grafana/grafana:10.4.9
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports: ["3000:3000"]
    depends_on: [prometheus]

  zap-af:
    image: ghcr.io/zaproxy/zaproxy:stable
    depends_on: [api]
    working_dir: /zap/wrk
    volumes:
      - ./zap-reports:/zap/wrk
    command: ["zap.sh","-cmd","-autorun","/zap/wrk/plan.yml"]
